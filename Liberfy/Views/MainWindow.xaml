<app:CustomWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:Liberfy.ViewModels"
    xmlns:local="clr-namespace:Liberfy.Views"
    xmlns:app="clr-namespace:Liberfy"
    xmlns:b="clr-namespace:Liberfy.Behaviors"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:mk="clr-namespace:Liberfy.Conats.MessageKeys"
    x:Class="Liberfy.Views.MainWindow"
    x:ClassModifier="internal"
    xmlns:msgs="clr-namespace:Liberfy.Messaging"
    mc:Ignorable="d" FontFamily="Meiryo"
    UseLayoutRounding="True"
    SnapsToDevicePixels="True"
    Title="Liberfy" Width="700" Height="500"
    Style="{StaticResource {x:Type app:CustomWindow}}">
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <app:TimelineItemTemplateSelector x:Key="TimelineItemTemplateSelector" />

        <ItemsPanelTemplate x:Key="TimelinePanelTemplate">
            <VirtualizingStackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>

        <app:TimelineViewItemTemplateSelector x:Key="TimelineViewItemTemplateSelector" />

        <DataTemplate x:Key="ColumnTemplate" DataType="{x:Type app:ColumnBase}">
            <Border
                ClipToBounds="True"
                x:Name="mainBorder"
                BorderThickness="1"
                Background="{DynamicResource ColumnBackground}"
                BorderBrush="{DynamicResource ColumnBorderBrush}">
                <DockPanel>
                    <Border
                        MinHeight="34"
                        DockPanel.Dock="Top"
                        BorderThickness="0 0 0 1"
                        Background="{DynamicResource ColumnHeaderBackground}"
                        BorderBrush="{DynamicResource ColumnHeaderBorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <Path
                                x:Name="PART_Icon"
                                Grid.Column="1"
                                Margin="6 0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Width="16" Height="16"
                                Fill="#444" Stretch="Fill" />

                            <!--Column title-->
                            <TextBlock
                                Grid.Column="2"
                                TextWrapping="NoWrap"
                                TextTrimming="CharacterEllipsis"
                                VerticalAlignment="Center"
                                Margin="6" FontSize="16"
                                Text="{Binding Title, Mode=TwoWay}"
                                Foreground="{DynamicResource ColumnHeaderForeground}" />

                            <TextBlock
                                Margin="6,0"
                                Grid.Column="3"
                                TextWrapping="NoWrap"
                                TextTrimming="CharacterEllipsis"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                TextAlignment="Right"
                                FontSize="10px"
                                LineHeight="12px">
                                <Hyperlink Style="{StaticResource MetadataLinkText}">
                                    <Run Text="{Binding Account.Info.Name, Mode=OneWay}" FontWeight="Black" /><!--
                                 --><LineBreak /><!--
                                 --><Run Text="{Binding Account.Info.FullName, Mode=OneWay, StringFormat='{}@{0}'}" />
                                </Hyperlink>
                            </TextBlock>

                            <Image
                                Grid.Column="4"
                                Margin="0 0 6 0"
                                Width="28" Height="28"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                b:TimelineBehavior.ProfileImage="{Binding Account.Info, Mode=OneTime}" />

                            <ToggleButton
                                x:Name="paneToggle"
                                Grid.Column="5" Padding="6,11"
                                Width="20" Height="34"
                                IsChecked="{Binding IsDetailOpen, Mode=TwoWay}"
                                Style="{StaticResource ColumnPanelToggleButton}" />

                            <StackPanel
                                Grid.Row="1" Grid.ColumnSpan="6"
                                app:ElementBehavior.Visible="{Binding IsDetailOpen, Mode=OneWay}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Button
                                        Padding="5,8"
                                        Grid.Column="0"
                                        Command="{Binding MoveLeftCommand, Mode=OneTime}"
                                        CommandParameter="{Binding Mode=OneTime}"
                                        Style="{StaticResource ColumnPanelButton}">
                                        <app:GeometryIcon
                                            Width="10px" Height="10px"
                                            Data="{StaticResource FontAwesome.Icon.ChevronLeft}"/>
                                    </Button>

                                    <Button
                                        Padding="5,8"
                                        Grid.Column="1"
                                        Command="{Binding MoveRightCommand, Mode=OneTime}"
                                        CommandParameter="{Binding Mode=OneTime}"
                                        Style="{StaticResource ColumnPanelButton}">
                                        <app:GeometryIcon
                                            Width="10px" Height="10px"
                                            Data="{StaticResource FontAwesome.Icon.ChevronRight}"/>
                                    </Button>

                                    <Button
                                        Padding="5,8"
                                        Grid.Column="3"
                                        Command="{Binding RemoveCommand, Mode=OneTime}"
                                        CommandParameter="{Binding Mode=OneTime}"
                                        Style="{StaticResource ColumnPanelButton}">
                                        <app:GeometryIcon
                                            Width="10px" Height="10px"
                                            Data="{StaticResource FontAwesome.Icon.Remove}"/>
                                    </Button>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Label
                        DockPanel.Dock="Top"
                        VerticalAlignment="Top"
                        Background="#FFD1F5CD"
                        BorderBrush="#FF77D47C"
                        BorderThickness="0 0 0 1" Padding="7 10" 
                        Content="{Binding Status, Mode=TwoWay}"
                        app:ElementBehavior.Visible="{Binding HasStatus, Mode=OneWay}" />

                    <app:TimelineView
                        BorderThickness="0"
                        Background="Transparent"
                        VirtualizingPanel.ScrollUnit="Pixel"
                        VirtualizingPanel.IsVirtualizing="True"
                        VirtualizingPanel.VirtualizationMode="Standard"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ItemsSource="{Binding Items, Mode=OneTime}"
                        ItemsPanel="{StaticResource TimelinePanelTemplate}"
                        ItemTemplateSelector="{StaticResource TimelineItemTemplateSelector}"
                        ItemContainerStyleSelector="{StaticResource TimelineViewItemTemplateSelector}" />
                </DockPanel>
            </Border>
        </DataTemplate>

        <Duration x:Key="SideBarAnimationDuration">0:0:0.7</Duration>
        <QuarticEase x:Key="SideBarPanelEase" EasingMode="EaseOut" />

        <!--サイドバーを開くアニメーション-->
        <Storyboard
            x:Key="ShowSideBarPanelStobyarod"
            FillBehavior="HoldEnd">
            <DoubleAnimation
                Storyboard.TargetName="PART_SideBarPanel"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                Duration="{StaticResource SideBarAnimationDuration}"
                EasingFunction="{StaticResource SideBarPanelEase}"
                To="0.0" />
            <DoubleAnimation
                Storyboard.TargetName="PART_TimelineView"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                Duration="{StaticResource SideBarAnimationDuration}"
                EasingFunction="{StaticResource SideBarPanelEase}"
                To="240.0" />
            <DoubleAnimation
                Storyboard.TargetName="PART_TimelineView"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                Duration="{StaticResource SideBarAnimationDuration}"
                EasingFunction="{StaticResource SideBarPanelEase}"
                To="0.4" />
            <BooleanAnimationUsingKeyFrames
                Storyboard.TargetName="PART_TimelineView"
                Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.0" Value="False" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <!--サイドバーを閉じるアニメーション-->
        <Storyboard
            x:Key="CloseSideBarPanelStoryboard"
            Duration="0:0:5.0"
            FillBehavior="HoldEnd">
            <DoubleAnimation
                Storyboard.TargetName="PART_SideBarPanel"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                Duration="{StaticResource SideBarAnimationDuration}"
                EasingFunction="{StaticResource SideBarPanelEase}"
                To="-239.0" />
            <DoubleAnimation
                Storyboard.TargetName="PART_TimelineView"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                Duration="{StaticResource SideBarAnimationDuration}"
                EasingFunction="{StaticResource SideBarPanelEase}"
                To="0.0" />
            <DoubleAnimation
                Storyboard.TargetName="PART_TimelineView"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                Duration="{StaticResource SideBarAnimationDuration}"
                EasingFunction="{StaticResource SideBarPanelEase}"
                To="1.0" />
            <BooleanAnimationUsingKeyFrames
                Storyboard.TargetName="PART_TimelineView"
                Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                <DiscreteBooleanKeyFrame KeyTime="0:0:1.0" Value="True" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <app:CustomWindow.TitleBarContent>
        <Grid Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontWeight="Bold"
                Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}" />

            <StackPanel
                Orientation="Horizontal"
                app:CustomWindow.IsHitTestVisible="True">
                <app:DropDownButton
                    Grid.Column="0"
                    Margin="2" Padding="4 2"
                    VerticalAlignment="Stretch"
                    PopupOffset="-5 0"
                    Style="{DynamicResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <app:GeometryIcon
                            Data="{StaticResource FontAwesome.Icon.UserCircle}"/>

                        <TextBlock
                            Margin="4 0 0 0"
                            Grid.Column="1"
                            Text="アカウント"
                            VerticalAlignment="Center" />

                        <app:GeometryIcon
                            Margin="4 0 2 0" Width="10"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Data="{StaticResource FontAwesome.Icon.ChevronDown}" />
                    </Grid>

                    <app:DropDownButton.PopupContent>
                        <app:PopupDecorator Width="300">
                            <ScrollViewer
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Auto">
                                <StackPanel
                                    Orientation="Vertical"
                                    KeyboardNavigation.TabNavigation="Local">
                                    <ItemsControl
                                        AlternationCount="2"
                                        ItemsSource="{Binding Accounts, Mode=OneTime}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type app:AccountBase}">
                                                <Border
                                                    x:Name="border"
                                                    Padding="6"
                                                    Background="Transparent">
                                                    <Grid Grid.IsSharedSizeScope="True">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition SharedSizeGroup="account" />
                                                            <RowDefinition />
                                                            <RowDefinition SharedSizeGroup="buttons" />
                                                        </Grid.RowDefinitions>

                                                        <ContentPresenter
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Left"
                                                            ContentTemplate="{StaticResource GeneralAccountTemplate}"/>

                                                        <StackPanel
                                                            Grid.Column="2"
                                                            Orientation="Horizontal"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">
                                                            <Button
                                                                Padding="12 8"
                                                                Command="{Binding DataContext.OpenPostWindowCommand, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Mode=OneTime}"
                                                                CommandParameter="{Binding Mode=OneTime}">
                                                                <app:GeometryIcon Data="{StaticResource FontAwesome.Icon.Edit}" />
                                                            </Button>
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>

                                                <DataTemplate.Triggers>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                        <Setter TargetName="border" Property="Background" Value="#99EEEEEE" />
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Separator />
                                    <MenuItem Header="アカウント管理(_M)" />
                                </StackPanel>
                            </ScrollViewer>
                        </app:PopupDecorator>
                    </app:DropDownButton.PopupContent>
                </app:DropDownButton>

                <Separator />

                <Button
                    ToolTip="ツイートする" Padding="8 0"
                    VerticalAlignment="Stretch"
                    Command="{Binding OpenPostWindowCommand, Mode=OneTime}"
                    Style="{DynamicResource {x:Static ToolBar.ButtonStyleKey}}">
                    <app:GeometryIcon
                        Width="18" Height="18"
                        Data="{StaticResource FontAwesome.Icon.Edit}" />
                </Button>

                <Button
                    ToolTip="設定を開く" Padding="8 0"
                    VerticalAlignment="Stretch"
                    Style="{DynamicResource {x:Static ToolBar.ButtonStyleKey}}">
                    <app:GeometryIcon
                        VerticalAlignment="Center"
                        Width="18" Height="18"
                        Data="{StaticResource FontAwesome.Icon.Cog}" />

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <!--設定ダイアログを開く-->
                            <msgs:OpenSettingViewDialogAction>
                                <l:DirectInteractionMessage>
                                    <msgs:OpenSettingDialogMessage />
                                </l:DirectInteractionMessage>
                            </msgs:OpenSettingViewDialogAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>

        </Grid>
    </app:CustomWindow.TitleBarContent>

    <Grid ClipToBounds="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="42" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <ScrollViewer
            x:Name="PART_TimelineView"
            Margin="1,0,0,0"
            Grid.Column="1"
            Background="Transparent"
            PanningMode="HorizontalOnly"
            VerticalScrollBarVisibility="Hidden"
            HorizontalScrollBarVisibility="Auto"
            ClipToBounds="True">
            <ScrollViewer.RenderTransform>
                <TranslateTransform X="240" />
            </ScrollViewer.RenderTransform>
            <ItemsControl
                ItemsSource="{Binding Columns, Mode=OneTime}"
                ItemTemplate="{StaticResource ColumnTemplate}"
                Height="{Binding ViewportHeight, ElementName=PART_TimelineView, Mode=OneWay}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Margin="3" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Width" Value="{DynamicResource UI.Column.Width}" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Focusable" Value="True" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>

        <Border
            x:Name="PART_SideBarPanel"
            Grid.Column="1"
            ClipToBounds="True"
            Width="240"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Left"
            Background="{DynamicResource ToolBar.Static.Background}"
            BorderThickness="0,0,1,0"
            BorderBrush="{DynamicResource ToolBar.Static.BorderBrush}">
            <Border.RenderTransform>
                <TranslateTransform X="0" />
            </Border.RenderTransform>
        </Border>

        <StackPanel
            Grid.Column="0"
            Width="42"
            ClipToBounds="True"
            Background="{DynamicResource ToolBar.Static.Background}">
            <Button
                Width="42" Height="42"
                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                Open
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource ShowSideBarPanelStobyarod}" />
                    </EventTrigger>
                </Button.Triggers>
            </Button>

            <Button
                Width="42" Height="42"
                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                Close
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource CloseSideBarPanelStoryboard}" />
                    </EventTrigger>
                </Button.Triggers>
            </Button>

            <Button
                Width="42" Height="42"
                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" />

            <Button
                Width="42" Height="42"
                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" />
        </StackPanel>
    </Grid>

    <Window.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard
                x:Name="bsb1"
                Storyboard="{StaticResource CloseSideBarPanelStoryboard}" />
            <SkipStoryboardToFill BeginStoryboardName="bsb1" />
        </EventTrigger>
    </Window.Triggers>

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="{x:Static mk:MainWindowMessageKeys.OpenPostWindow}" Messenger="{Binding Messenger, Mode=OneTime}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type local:TweetWindow}" IsOwned="True" Mode="Modal" />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>
</app:CustomWindow>
